
CHANGELOG for eac-toolkit:



- 05/13/2006

  * simulator.pm - sketched out command flushing controls



- 05/10/2006

  * simulator.pm - added machine names to init_*



- 04/23/2006

  * Toolkit.pm - added lower bound checking to translate_to_coords()



- 03/23/2006

   * interface.pm - added an ENABLED flag to the command structure
	- disabled command tokens are not loaded
   * interface.pm - connect/disconnect commands now check the driver first
	- driver.pm - added attempt_device_connection flag
	- simulator.pm, eac.pm - updated init() routines to set device flag



- 03/22/2006 

   * inteface.pm - updated connect/disconnect handlers to handle Driver::NA
   * simulator.pm - first cut at porting Bryce's simulator code
   * toolkit.pm - added load_module() utility routine to try to safely load modules
   * toolkit.pm - added translate_to_coords() utility to convert an index to (x,y)   



- 03/20/2006

   * fitness.pm - cleaned up module
   * fitness.pm - added configuration instantiator (send_to_hardware)
   * driver.pm - bootstrapped component handlers
	- write_source
	- write_sink
	- write_lla_in



- 03/19/2006 - Basic driver model complete

   * driver.pm - moved common variables (genome length, etc) back into the driver
	- removed get/set methods, now set directly by driver subclasses
	- removed cached genome_length, etc. from fitness.pm, ga.pm
   * driver.pm - split init_hardware into init_driver() and connect()
	- interface.pm - added 'eac' connection skeleton to the interface
   * driver.pm - added basic network connectivity to the EAC driver
   * driver.pm - finalized basic driver connect-disconnect model
   * ga.pm - generations is now 1-based
   * ga.pm - refactored ga::run()
	- for-loop replaced with labeled loop
	- moved breeding below evaluation
	- moved statistics into a get_generation_statistics
	- running time now reported in all cases
	- run() now returns the genome index on successful runs
   * interface.pm - parameter_handler() working
	- refactored toggle_handler() to use the same techniques
	- updated command hash structure (consolidate messages under STATUS_MSG)
   * general - replaced $TRUE/$FALSE/$NULL with constants
	- interface.pm - replaced $OTHER_CAP_VARS with constants



- 03/18/2006

   * driver.pm - get_genome_length() now calls the driver for a value
   * driver.pm - defined eac-simulator and ueac-simulator as special cases
	of the common simulator driver
   * driver.pm - added driver mode checking to init_hardware()
   * driver.pm - defined EACs:  eac1-eac4, simulator
   * ga.pm - modified ga::run() to return consistent values
   * ga.pm - updated the init system to check for, and ignore, the null driver
   * ga.pm - migrated printd() to Toolkit::printd()
   * interface.pm - added DEFAULT_DRIVER and DEFAULT_EAC to configuration section
   * interface.pm - driver_handler() now reports current driver when args=0
   * toolkit.pm - modified printd() to look for the caller's DEBUG_ON variable
	- removed printd() routines from interface.pm, ga.pm, driver.pm



- 03/17/2006

   * driver.pm - modified call_driver() to return the result of the driver call (duh)
   * interface.pm - deployed new prefix autogenerating debug handler
	- prefix is autogenerated using Toolkit::get_subroutine(1)
	- prefix may be omitted by specifying a second argument (any value)
   * interface.pm - improved argument checking feedback
   * interface.pm - modified toggle_handler to report state when args=0
   * interface.pm - added 'driver' and 'eac' hooks (initialization)



- 03/16/2006

   * driver.pm - new driver layout
	- retired 'protocol' flag
	- retired 'eac mode'
	- linear/grid layout -> fixed/free layout (public)
 	- new export model:
		- Driver::driver maps to individual driver module
		- Driver::eac maps to actual hardware device
		- Driver::hardware_layout maps to information (for the GA)
   * driver.pm - added get_driver_list() to enumerate valid drivers
   * driver.pm - sketched out a native call handler (call_driver())
   * driver.pm - experimenting with a new prefix autogenerating debug handler
   * driver.pm - sketched out init_hardware()
	- added NULL_DRIVER and NULL_EAC for default initialization
   * ga.pm - replaced quoted-ticks (\') with regular ticks in strings
   * ga.pm - replaced printf() with Toolkit::printf()
   * interface.pm - refactored argument checking
	- more informative message on count mismatch
	- invalid arguments now short-circuit processing
   * interface.pm - cleaned up the distinction between the token and its arguments
   * interface.pm - refactored the help handler
	- more consistent 'token: MSG' feedback
	- single point-of-return
   * interface.pm - refactored crash() to use caller() for context
	- ga.pm - removed hardcoded function names from crash callers
   * interface.pm - added checking for undefined crash flag
   * interface.pm - privatized variables
   * toolkit.pm - added a common utilities module
	- added get_subroutine() for autogeneration
	- migrated functions out of interface.pm and ga.pm



- 03/07/2006

   * migrated cleanup script to make
   * interface.pm - renamed package from 'eac' to 'interface'
   * Term.pm - modified the break_handler to die on null handler (default)
	- globalized the break_handler variable in interface.pm



- 03/06/2006

   * added skeleton drivers for EAC, uEAC, vEAC
   * imported logging module
   * term.pm - added a break handler callback (Term::break_handler)
   * interface.pm - moved crash() out of GA.pm
   * interface.pm - converted command keys to constants
   * interface.pm - added a feedback toggle to printf()
	- time to consolidate print handlers
   * interface.pm - moved the command hash definition into init_interface()
   * simulator.pm - imported eacsim code
   * driver.pm - moved v2.0 hardware code to old.pm
   * driver.pm - added skeleton init_hardware()
   * ga.pm - moved timer code into interface.pm (for now)
   * ga.pm - refactored init() to read from driver.pm
   	- init() is no longer hardware aware :-)



- 03/05/2006 - Successful fitness convergence (test case)

   * reorganized directory structure (Drivers, Modules, etc.)
   * hardware.pm - created driver skeleton for eventual 3.0 branch
   * added formal module references
   * ga.pm - modified the evaluator to pass the encoded genome, rather
	than an index into the population (UPDATE: reverted for efficiency)
   * fitness.pm - updated evaluate_fitness() to dereference the genome pointer
	and call the appropriate fitness evaluator
   * fitness.pm - added a number of skeleton evaluators
   * ga.pm - reworked the generation reporting for successful runs
   * fitness.pm - added and commented a very basic evaluator
   * interface.pm - globalized (my, not our) token parameters for use by handlers
   * interface.pm - first cut at an interactive help system
	- renamed HELP_MSG to ERROR_MSG
	- added HELP_MSG as the new help string
	- added a help_handler() to process help requests



- 03/03/2006

   * ga.pm - minor stats and output tweaks
   * interface.pm - added print handlers for more controlled I/O
   * interface.pm - rewrote the command structure to allow for more
	advanced parameter defintion (see NOTES)
   * interface.pm - added argument count validation
   * interface.pm - added option strict argument checking
   * interface.pm - consolidated debug routines under a toggle_handler()
   * interface.pm - cleaned up code, formalized things



- 03/02/2006 - GA COMPLETE (BETA)

   * interface.pm - token processor now leaves the token on the input list
   * term.pm - modified the completion list to trigger on double-tab :-)
   * term.pm - fixed raw escape bug
   * ga.pm - abstracted the temp. population pointer behind TEMP_POPULATION_BASE
	- updated initial temp. population setup in init()
	- added bookeeping code to activate_new_generation()
   * ga.pm - introduced activate_new_generation()
   * ga.pm - enhanced and refactored get_generation_statistics()



- 03/01/2006 - MUTATION FEATURE COMPLETE

   * ga.pm - rearranged code, cleaned up comments
   * ga.pm - audited lla mutation code
   * ga.pm - updated copy_to_temp() to use pack/unpack
   * ga.pm - mutate_genome() was not copying unmutated genes
   * ga.pm - split pack_gene into pack_gene() and get_packed_gene()
   * ga.pm - added debugging statements to pack/unpack functions
   * ga.pm - refactored gene-level debugging
   * ga.pm - rearranged print masks
   * interface.pm - added a handler for general, genome-level debugging
   * ga.pm - implemented worst and average fitness tracking in gen_stats()
   * ga.pm - updated copy_to_temp to use debug-db, for now



- 02/28/2006

   * ga.pm - split mutation cases into seperate functions
	- mutate_current()
	- mutate_lla_function()
   * ga.pm - introduced $debug_string for complex debugging
	- introduced a reset method, reset_debug_string()
	- migrated init_genome() to use $debug_string
	- reworked mutate_genome() debugging
	- reworked mutate_packed_gene() debugging
	- reworked mutate_current() debugging
	- reworked mutate_lla_function() debugging
   * ga.pm - introduced hardware parameters for mutation
	- min_current, max_current, current_precision -- set by hardware
	- implemented hardware ranges for get_random_current() and
	  get_random_lla_function()



- 02/27/2006

   * ga.pm - split genome mutation (overseer) and individual gene mutation
   * ga.pm - refactored muatation overseer logic
   * ga.pm - simplified mutation classes:
	- type: type change - <unsupported>
	- type: position shift - <unsupported>
	- value: noise mutation - lowercase print flags
	- value: random mutation - uppercase print flags
	- value: position shift (LLA output) - <unsupported>
   * ga.pm - imported random_current() and random_lla() from v2.0 (broken)
   * ga.pm - added a toggle (use_noise_mutation) to disable noise mutation



- 02/19/2006

   * interface.pm - tokenizer now discards the command token before
	calling the command handler (testing)
   * interface.pm - testing GA-feedback control integration
   * ga.pm - ported mutation logic from v2.0
   * ga.pm - added print flags for the mutation mask



- 02/17/2006

   * term.pm - added a rough handler for CTRL+C
   * interface.pm - modified the tokens hash to use the value as the
	handler function to call
   * interface.pm - added a regular expression to split input into
	the token and its parameters (if any)

	- NOTE: this disallows valid input tokens from having spaces
   * interface.pm - added ga execution
   * ga.pm - removed autorunning, now called from the interface module
   * ga.pm - removed random initialization (use fitness instead)
   * ga.pm - various minor improvements to commenting, code layout



- 02/13/2006

   * term.pm - first cut at history support



- 02/10/2006

   * ga.pm - first cut at mutation
   * interface.pm - testing new interface approaches
   * term.pm - added to source control (for now)
	- Modification of Term::Complete
   * term.pm - added control character trapping (\027) support



- 02/08/2006

   * ga.pm - fixed a bug in the gene splicer (reversed donors)
   * ga.pm - fixed a bug in get_gene_value (incorrect reference variable)
	- How the hell did this go undetected so long?!
   * ga.pm - added debugging statements to the get_gene_* methods
   * ga.pm - converted splice algorithm to gene component packing
	- No longer using get_encoded_gene()
   * ga.pm - debugged copy_to_temp()



- 01/30/2006

   * ga.pm - reworked the output of crash()
   * ga.pm - added a check for undefined variables in crash()
   * ga.pm - added a TEMP_DELIMITER to prepend to indices into the population
	* Used for copying offspring to the "temp. population"
   * ga.pm - cleaned up some internal globals for consistency



- 01/15/2006

   * ga.pm - added an option to allow crossover to use the same parent
	for breeding (require_different_parents)
   * ga.pm - added high-level feedback
   * ga.pm - continue restructuring of the breeding algorithm



- 01/14/2006

   * ga.pm - updated some of the commenting
   * ga.pm - restructured crossover (see notes)



- 12/27/2005

   * ga.pm - added two gene level functions, get_encoded_gene() and 
	set_encoded_gene(), to manipulate genes independent of their
	type-value encodings
   * ga.pm - fixed the splicing loop in breed_with_crossover()



- 12/17/2005

   * ga.pm - fixed a bug in select_random_genome() (missing return)
   * ga.pm - added debugging statements to crossover



- 12/04/2005

   * ga.pm - re-wrote crossover routine (breed_with_crossover())
	from scratch
   * ga.pm - added option for static or variable crossover regions
	* use_static_crossover_regions {T|F}
   * ga.pm - sketched out some init() code for checking crossover params.



- 11/18/2005

   * ga.pm - fitness_mask is now program-wide, it is applied
      	at the set_fitness() level
   * ga.pm - get_genome() now returns an encoded genome
   * ga.pm - implemented copy_to_temp()
	* temp_population{$NULL} stores a pointer to the next
	  available slot
   * general - cleaned up the trunk
   * ga.pm - added breed_with_tournament_selection boolean
   * ga.pm - implemented select_random_genome() with tournament
	selection/normal selection checking
   * ga.pm - added third level headings for debugging output



- 11/16/2005

   * ga.pm - sketched out new copy algorithm
	* get_genome() returns an encoding
	* copy_to_temp() expects an encoding



- 11/14/2005

   * ga.pm - sketched out a new breed algorithm
   * ga.pm - introduced new booleans to control breeding:
	* breed_with_{elitism|crossover|mutation}



- 11/06/2005

   * ga.pm - new get_elites() function, with a lot less suck
   * ga.pm - new breeding-level debug routine, printdb()
   * ga.pm - printing is less broken
	* values are not currently handled
	* human-readable indices are not implemented



- 10/28/2005

   * ga.pm - revised gene printing, now using a flag system with API
	calls to modularize code:
	   * internal: global flags GS_* for access control
	   * API: get_gene_string (gene map only)
	   * API: get_connection_string (conn. string only)
	   * API: get_genome_string (both)
	   * get_g_string() - underlying function



- 10/27/2005

   * ga.pm - lots of output tweaking
   * ga.pm - moved mutation into run(), as a population-level function,
	mutate_new_generation()
   * ga.pm - first cut at a new post-evaluation statistics routine



- 10/23/2005

   * ga.pm - split debugging into layers (general, genome, etc)
   * ga.pm - sketched out a new breeding algorithm
   * ga.pm - fixed fitness, get_best_ftiness()
   * ga.pm - started on the evaluation routine
   * fitness.pm - added skeleton to source control


- 10/22/2005

   * ga.pm - genome initialization looks like it's working (fixed
	get_connection_type_by_index())



- 10/21/2005

   * ga.pm - further flattened genome by adding a gene_print method
   * ga.pm - added feedback_adjustment to allow flexibility in output
   * ga.pm - fixed get/set methods for accessing methods
	* it looks like the basic storage strategy is working now



- 10/20/2005

   * ga.pm - fixed a bug in the way the time was being kept
   * ga.pm - first cut at a new genome layout
   * ga.pm - defined get/set methods for accessing the genome (broken)
   * ga.pm - first cut at a new set of genome printing methods
   * expanded the output of crash() to be more detailed
   * cleanup.sh - added a shell script to remove emacs' save files



- 10/17/2005

   * ga.pm - running time is now tracked
   * ga.pm - split up the init() system:
	* init(), -population(), -genome(), -gene()
   * hardware.pm - copied to the modules directory
   * hardware.pm - started migration to package status
   * hardware.pm - started working on a new abstraction architecture
	* 'protocol' flag for communication details
	* 'layout' flag for pin layout (linear vs. grid (vs. radial?))
   * using a new flag-based crash mechanism (ga::crash() for now)
   * ga.pm - added another output option, verbose (printg)
	* reworked output to run through printf(), controlled by $FEEDBACK_ON
  


- 10/16/2005 - v2.1.0-alpha1 - MAJOR FORK

   * New standards for v2.1:
	* config.pm is DEPRICATED - shared globals go in the file they
		are most commonly used in
	* support files are stored in MODULES for now
	* all modules are prefixed by a package name, strict declarations,
		and warnings and diagnostics enabled
	* all curly braces are now block aligned
	* all globals are package referenced, even when they are in scope
	* all function calls are package referenced
	* flags should be hidden behind API calls
   * ga.pm - encode() is OBSOLETE in favor of set_gene_type() and set_gene_value()
   * ga.pm - fitness checking moved out of evaluate_population() and in to the
	overseer function, run()
   * ga.pm - first cut at making initialization hardware agnostic
   * interface.pm - first cut at a more robust CLI
	* tab completion with Term::Complete, --or--
	* history with Term::ReadKey
   * feedback - printf() and printd() are now local functions, for each package



- 10/04/2005 - v2.0.2

   * BUGFIX: hardware.pm - fixed a major conversion flaw in write_dac()



- 09/26/2005 - Now under version control!

   * hardware.pm/interface.pm - added report-chain() and poll-chain(),
	two reporting tools for daisy-chained LLAs
   * BUGFIX: interface.pm - revised poll-lla() (unstable) to use
	ms, was using seconds; fixed an input off-by-one error
   * BUGFIX: hardware.pm - LLA functions weren't getting written
   * Cleaned up the directory layout a bit (added /docs)



- 09/23/2005 - v2.0.1

   * fitness.pm - Started on XOR fitness function
   * HELPFILE - updated directions
   * interface.pm - updated directions
   * config.pm - Defaulted to eac4
   * config.pm - Fixed min/max current parameters



- 09/16/2005 - v2.0.0 - Initial Release :-)
